@using qlts.Enums
@using qlts.Extensions;
@model List<qlts.ViewModels.FixedAssets.FixedAssetIndexViewModel>
@{
    ViewBag.Title = "Danh sách Tài sản";
    ViewBag.pTitle = "Tài sản";
    ViewBag.pageTitle = "Trang chủ";
    var stt = 1;
    const string controller = "FixedAssets";
    var data = Model;
}
@section styles{
    <link href="~/Content/assets/plugins/datatable/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />
}

<div class="row">
    <div class="col-12">
        <div class="card">

            <div class="card-body">
                <div class="row mb-2">
                    <form method="post" class="row g-3" id="sForm">
                        @Html.AntiForgeryToken()
                        <div class="col-md-3 mb-3">
                            <label class="mt-2">Kho</label>
                            <select class="form-control form-select" name="Warehouse" id="Warehouse">
                                <option value="0">Tất cả</option>
                                @foreach (var option in (List<qlts.ViewModels.Warehouses.WarehouseIndexViewModel>)TempData["Warehouses"])
                                {
                                    <option value="@option.Id" @(option.Id == Guid.Parse(TempData["Warehouse"].ToString()) ? "selected='selected'" : "")> @option.Name</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-3 mb-3">
                            <label class="mt-2">&nbsp;</label>
                            <br />
                            <button class="btn btn-primary mb-2 btn__search" type="submit">
                                <span class="bx bxs-search-alt-2"></span>
                            </button>
                        </div>
                    </form>
                </div>
                @if (User.Identity.IsAuthenticated && User.IsInRole(PositionType.AccountingManager.ToString()))
                {

                    <div class="row mb-2">
                        <div class="col-sm-10">
                            <button type="button" class="btn btn-info" id="btn_transfer"><i class="bx bx-transfer"></i>Chuyển kho</button>
                        </div>
                        <div class="col-sm-2">

                        </div><!-- end col-->
                    </div>
                }
                <div class="table-responsive-lg">
                    <table id="datatable-buttons" class="table table-striped table-bordered mb-0 delete-container">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">
                                    <input type="checkbox" class="form-check-input" id="checkbox-all">
                                </th>
                                <th class="text-center align-middle" style="min-width: 3px;">STT</th>
                                <th class="text-center align-middle" style="min-width: 150px;">@Html.DisplayNameFor(n => n.FirstOrDefault().FieldName)</th>
                                <th class="text-center align-middle" style="min-width: 150px;">@Html.DisplayNameFor(n => n.FirstOrDefault().ManufacturerName)</th>
                                <th class="text-center align-middle" style="min-width: 110px;">@Html.DisplayNameFor(n => n.FirstOrDefault().ManufacturerDate)</th>
                                <th class="text-center align-middle" style="min-width: 120px;">@Html.DisplayNameFor(n => n.FirstOrDefault().WarrantyPeriodDate)</th>
                                <th class="text-center align-middle" style="min-width: 80px;">@Html.DisplayNameFor(n => n.FirstOrDefault().FixedAssetStatusName)</th>
                                <th class="text-center align-middle" style="min-width: 130px;">@Html.DisplayNameFor(n => n.FirstOrDefault().FixedAssetDateFormatted)</th>
                                <th class="text-center align-middle" style="min-width: 260px;">@Html.DisplayNameFor(n => n.FirstOrDefault().Code)</th>
                                <th class="text-center align-middle" style="min-width: 90px;">@Html.DisplayNameFor(n => n.FirstOrDefault().Name)</th>
                                <th class="text-center align-middle" style="min-width: 90px;">@Html.DisplayNameFor(n => n.FirstOrDefault().Description)</th>
                                <th class="text-center align-middle" style="min-width: 110px;">@Html.DisplayNameFor(n => n.FirstOrDefault().Quantity)</th>
                                <th class="text-center align-middle" style="min-width: 110px;">@Html.DisplayNameFor(n => n.FirstOrDefault().Unit)</th>
                                <th class="text-center align-middle" style="min-width: 110px;">@Html.DisplayNameFor(n => n.FirstOrDefault().PartNumber)</th>
                                <th class="text-center align-middle" style="min-width: 110px;">@Html.DisplayNameFor(n => n.FirstOrDefault().SerialNumber)</th>
                                <th class="text-center align-middle" style="min-width: 80px;">@Html.DisplayNameFor(n => n.FirstOrDefault().CostFormatted)</th>
                                <th class="text-center align-middle" style="min-width: 100px;">@Html.DisplayNameFor(n => n.FirstOrDefault().Total)</th>
                                <th class="text-center align-middle" style="min-width: 110px;">@Html.DisplayNameFor(n => n.FirstOrDefault().Note)</th>
                                @if (User.Identity.IsAuthenticated && User.IsInRole(PositionType.AccountingManager.ToString()))
                                {

                                    <th></th>
                                }
                            </tr>
                        </thead>


                        <tbody>
                            @foreach (var item in data)
                            {
                                <tr>
                                    <td>
                                        <div class="form-check">
                                            <input type="checkbox" data-id="@item.Id" class="form-check-input" name="checklist[]">
                                        </div>
                                    </td>
                                    <td>@(stt++)</td>
                                    <td>@item.FieldName</td>
                                    <td>@item.ManufacturerName</td>
                                    <td>@item.ManufacturerDate</td>
                                    <td>@item.WarrantyPeriodDate</td>
                                    <td>@item.FixedAssetStatusName</td>
                                    <td>@item.FixedAssetDate</td>
                                    <td>@item.Code</td>
                                    <td>@item.Name</td>
                                    <td>@item.Description</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.Unit.GetDisplayName()</td>
                                    <td>@item.PartNumber</td>
                                    <td>@item.SerialNumber</td>
                                    <td>@item.CostFormatted</td>
                                    <td>@item.Total</td>
                                    <td>@item.Note</td>
                                    @if (User.Identity.IsAuthenticated && User.IsInRole(PositionType.AccountingManager.ToString()))
                                    {

                                        <td class="text-center">
                                            <div class="d-flex order-actions justify-content-center">
                                                <a href="@Url.Action( "CreateUpdate", controller, new { id = item.Id } )" class=""><i class='bx bxs-edit'></i></a>
                                                <a data-url='@Url.Action( "Delete", controller, new { id = item.Id } )' class="ms-3 delete-button"><i class='bx bxs-trash'></i></a>
                                            </div>
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- end cardaa -->
    </div> <!-- end col -->
</div> <!-- end row -->
@Html.Partial("CreateModal")
@section scripts{
    <!-- Required datatable js -->
    <script src="~/Content/assets/plugins/datatable/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/assets/plugins/datatable/js/dataTables.bootstrap5.min.js"></script>

    <!-- Datatable init js -->
    <script>
        $(document).ready(function () {
            var table = $('#datatable-buttons').DataTable({
                lengthChange: false,
                filter: false,
                info: false,
                scrollY: '50vh',
                scrollX: true,
                scrollCollapse: true,
                paging: false,
                language: {
                    searchPlaceholder: "Tìm kiếm",
                    info: "Hiển thị _START_ tới _END_ của _TOTAL_ dữ liệu",
                    infoEmpty: "Hiển thị 0 tới 0 của 0 dữ liệu",
                    search: "_INPUT_",
                    zeroRecords: "Không tìm thấy dữ liệu",
                    emptyTable: "Chưa có dữ liệu",
                    paginate: {
                        first: "Trang đầu",
                        previous: "Trang trước",
                        next: "Trang kế",
                        last: "Trang cuối"
                    }
                },
                buttons: ['excel', 'pdf'],

            });

            table.buttons().container()
                .appendTo('#datatable-buttons_wrapper .col-md-6:eq(0)');
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        $(function () {
            "use strict";
            $('.form-select').select2({
                theme: "bootstrap-5",
                width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
                placeholder: $(this).data('placeholder'),
            });
        });
    </script>
    @if (User.Identity.IsAuthenticated && User.IsInRole(PositionType.AccountingManager.ToString()))
    {

        <script src="~/Scripts/app/controllers/fixed-asset.js"></script>
        <script>
            var fixedAssets = new fixedAssetsController();
            fixedAssets.initialize();
        </script>
    }
}